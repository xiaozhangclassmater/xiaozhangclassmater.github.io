(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{331:function(s,e,t){"use strict";t.r(e);var a=t(10),r=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"工作学习笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作学习笔记"}},[s._v("#")]),s._v(" 工作学习笔记")]),s._v(" "),e("h2",{attrs:{id:"正则-exce"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则-exce"}},[s._v("#")]),s._v(" 正则 exce()")]),s._v(" "),e("p",[e("strong",[s._v("参数 1")]),s._v(" ：要匹配的字符串")]),s._v(" "),e("p",[e("strong",[s._v("返回值")]),s._v(" ： 如果匹配失败，"),e("code",[s._v("exec()")]),s._v(" 方法返回 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/null",target:"_blank",rel:"noopener noreferrer"}},[e("code",[s._v("null")]),e("OutboundLink")],1),s._v("，并将正则表达式的 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex",target:"_blank",rel:"noopener noreferrer"}},[e("code",[s._v("lastIndex")]),e("OutboundLink")],1),s._v(" （匹配索引）重置为 0。")]),s._v(" "),e("p",[s._v("如果匹配成功，"),e("code",[s._v("exec()")]),s._v(" 方法返回一个数组，并更新正则表达式对象的 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex",target:"_blank",rel:"noopener noreferrer"}},[e("code",[s._v("lastIndex")]),e("OutboundLink")],1),s._v(" 属性。完全匹配成功的文本将作为返回数组的第一项，从第二项起，后续每项都对应一个匹配的捕获组。数组还具有以下额外的"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec",target:"_blank",rel:"noopener noreferrer"}},[s._v("属性"),e("OutboundLink")],1),s._v("：")]),s._v(" "),e("p",[s._v("将 正则 （）作为一个匹配组，第一项作为整个正则")]),s._v(" "),e("p",[s._v("参数1：第一项结果为 完整的正则匹配结果")]),s._v(" "),e("p",[s._v("参数2：将符合 第一组正则 "),e("code",[s._v("(\\d+)")]),s._v(" 匹配到的结果作为第二个参数")]),s._v(" "),e("blockquote",[e("p",[s._v("?: 忽略一组匹配的结果")])]),s._v(" "),e("p",[s._v("参数3：将第四组"),e("code",[s._v("(.\\d+)")]),s._v(" 正则匹配到的结果放入第三个参数")]),s._v(" "),e("p",[e("strong",[s._v("示例1")])]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(\\d+)(?:(.\\d+)|)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100.2'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出 ['100.2' ，'123' , '.2' ， index： 0 ， groups: undefined , input:'123.2']")]),s._v("\n")])])]),e("h2",{attrs:{id:"正则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则"}},[s._v("#")]),s._v(" 正则?:")]),s._v(" "),e("p",[s._v("忘记匹配?:后的结果，不将它划入匹配结果中")]),s._v(" "),e("p",[s._v("**非捕获组：**匹配 “x”，但不记得匹配。不能从结果数组的元素中收回匹配的子字符串 ("),e("code",[s._v("[1], ..., [n]")]),s._v(") or from the predefined "),e("code",[s._v("RegExp")]),s._v(" object's properties ("),e("code",[s._v("$1, ..., $9")]),s._v(").")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("reg"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("abc(?:de|fg)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),s._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("matchAll")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['abcde'] ['abcfg']")]),s._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("reg"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("abc(de|fg)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),s._v("\nstr"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abcde12abcfg'")]),s._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("matchAll")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['abcde', 'de'] ['abcfg', 'fg']")]),s._v("\n")])])]),e("h2",{attrs:{id:"正则的前瞻运算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则的前瞻运算"}},[s._v("#")]),s._v(" 正则的前瞻运算")]),s._v(" "),e("p",[s._v("从 某个固定的位置 开始向前查找，不消耗字符，只要符合"),e("code",[s._v("?=")]),s._v(" 的  就作为符合条件的匹配。")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(\\d{3})(?=\\d)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),s._v(" \n")])])]),e("p",[s._v("示例：")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abcd'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("([a-z]{3})(?=\\d)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'abcd'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("([a-z]{3})(?=\\d)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'abc,1'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1231'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("(\\d{2})(?=(\\d))")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'?'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '12?31'")]),s._v("\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);